import numpy as np
import pandas as pd
from sklearn import ensemble
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
# 读取数据
data = pd.read_csv('process2.csv', sep=',')

# 将数据中每一列的0用每一列平均值替换
# mean = data.mean(axis=0)
# data.replace(0, mean, inplace=True)

# 将空值用平均值替换
# data.fillna(mean, inplace=True)

# 将数据中每一列的0用每一列最大值替换
max = data.max(axis=0)
data.replace(0, max, inplace=True)

# 将空值用平均值替换
data.fillna(max, inplace=True)

# 删除重复值
data.drop_duplicates(inplace=True)

# 获取特征值
x = data.iloc[:, :-15]

# 获取目标值
y = data.iloc[:, -15:]

# 标准化

ss_x = StandardScaler()
x = ss_x.fit_transform(x)
ss_y = StandardScaler()
y = ss_y.fit_transform(y)

# 划分训练集和测试集
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.1, random_state=3)

random_forest_regressor = ensemble.RandomForestRegressor(n_estimators=300,
                                                         criterion='squared_error',
                                                         max_depth=40,
                                                         random_state=0,)
model = random_forest_regressor
model.fit(x_train, y_train)  # 拟合模型
score = model.score(x_test, y_test)
y_pred = model.predict(x_test)
print('mse:', mean_squared_error(y_test, y_pred))
print('RandomForest_score:', score)
# 绘图
plt.plot(ss_y.inverse_transform(y_pred)[0])
plt.plot(ss_y.inverse_transform(y_test)[0])
plt.plot(ss_y.inverse_transform(y_test)[1])
plt.legend(['predicted value 1', 'real values', 'predicted value 2'])
plt.savefig('plot.png')
plt.show()
